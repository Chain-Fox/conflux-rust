name: Tests

on:
  push:
    branches: [master]
    paths-ignore:
      - "*.md"
      - "*.json"
      - "*.sol"
      - "docs/**"
      - ".gitignore"
      - ".travis.yml"
      - "cargo_fmt.sh"
      - "CODEOWNERS"
  pull_request:
    branches: [master]
    paths-ignore:
      - "*.md"
      - "*.json"
      - "*.sol"
      - "docs/**"
      - ".gitignore"
      - ".travis.yml"
      - "cargo_fmt.sh"
      - "CODEOWNERS"

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-base-${{ hashFiles('.github/dockers/base.Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-buildx-base-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .github/dockers/base.Dockerfile
          load: true
          tags: base-builder:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache to the correct location
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Docker image
        run: docker save base-builder:latest -o /tmp/base-builder.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/base-builder.tar
          retention-days: 1

  check-crates:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Cache Cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-deps-

      - name: Cache debug build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/debug/deps
            target/debug/.fingerprint
            target/debug/build
            !target/debug/build/**/out
            !target/debug/deps/librust_verify*
            !target/debug/incremental
            !target/debug/.cargo-lock
          key: ${{ runner.os }}-build-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-debug-

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/base-builder.tar

      - name: Check individual crates
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/root/.cargo/registry \
            -v ~/.cargo/git:/root/.cargo/git \
            -e RUST_BACKTRACE=1 \
            -w /app base-builder:latest \
            dev-support/check-crates.sh

      - name: Ensure cache files are accessible
        run: |
          sudo chown -R $(id -u):$(id -g) target/debug 
          sudo chown -R $(id -u):$(id -g) ~/.cargo

  workspace-tests:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Cache Cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-deps-

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/release/deps
            target/release/.fingerprint
            target/release/build
            !target/release/build/**/out
            !target/release/incremental
            !target/release/.cargo-lock
          key: ${{ runner.os }}-build-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-release-

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/base-builder.tar

      - name: Run workspace tests
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/root/.cargo/registry \
            -v ~/.cargo/git:/root/.cargo/git \
            -e RUST_BACKTRACE=1 \
            -w /app base-builder:latest \
            cargo nextest run --no-fail-fast --release --workspace

      - name: Ensure cache files are accessible
        run: |
          sudo chown -R $(id -u):$(id -g) target/release 
          sudo chown -R $(id -u):$(id -g) ~/.cargo

  cfx-addr-tests:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Cache Cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-deps-

      - name: Cache debug build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/debug/deps
            target/debug/.fingerprint
            target/debug/build
            !target/debug/build/**/out
            !target/debug/deps/librust_verify*
            !target/debug/incremental
            !target/debug/.cargo-lock
          key: ${{ runner.os }}-build-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-debug-

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp

      - name: Load Docker image
        run: docker load -i /tmp/base-builder.tar

      - name: Run cfx-addr
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -v ~/.cargo/registry:/root/.cargo/registry \
            -v ~/.cargo/git:/root/.cargo/git \
            -e RUST_BACKTRACE=1 \
            -w /app base-builder:latest \
            cargo nextest run --no-fail-fast -p cfx-addr --no-default-features

      - name: Ensure cache files are accessible
        run: |
          sudo chown -R $(id -u):$(id -g) target/debug 
          sudo chown -R $(id -u):$(id -g) ~/.cargo
